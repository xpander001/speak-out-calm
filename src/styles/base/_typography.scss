$heading-stack  : NeuzeitGro, "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
$body-stack     : NeuzeitGro, "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
$serif-stack    : Georgia, Times, "Times New Roman", serif;
$logo-stack     : QuestaSans, Georgia, "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;

$base-font-size: 18 !global;
$base-line-height: 1.4 !global;
$type-sizes: (xs: 14, sm: 16, md: 24, lg: 28, xl: 48, xxl: 72);

body {
  font-family: $body-stack;
}

/**
 * Text
 */

.text {
  @include font-size($base-font-size);
  line-height: #{$base-line-height}em;
}

.text--lh {
  @include line-height($base-font-size * $base-line-height);
}

@each $size, $value in $type-sizes {
  .text--#{$size} {
    @include font-size($value);
    line-height: #{$base-line-height}em;
  }
  .text--lh-#{$size} {
    @include line-height($value * $base-line-height);
  }
}

@each $breakpoint, $var in $breakpoints {
  @media #{$var} {
    @each $size, $value in $type-sizes {
      .text--#{$size}-at-#{$breakpoint} {
        @include font-size($value);
      }
    }
    .text--inherit-at-#{$breakpoint} {
      font-size: inherit;
    }
  }
}

.text--heading {
  font-family: $heading-stack;
  line-height: 1.2em;
  font-weight: 400;
  color: $color-text-heading;
}
.text--logo {
  font-family: $logo-stack;
}
.text--heading-light {
  font-family: $heading-stack;
  line-height: 1.2em;
  font-weight: 300;
  color: $color-text-heading;
}
.text--light {
  font-family: $heading-stack;
  line-height: 1.2em;
  font-weight: 300;
}
.text--subtle {
  color: $color-text-subtle;
}
.text--serif {
  font-family: $serif-stack;
  line-height: 1.4em;
}
.text--uppercase {
  text-transform: uppercase;
}
.text--italic {
  font-style: italic;
}
.text--underline {
  text-decoration: underline;
}
.text--no-underline {
  text-decoration: none;
}
.text--hover-underline {
  text-decoration: none;
  &:hover {
    text-decoration: underline;
  }
}
.text--left {
  text-align: left;
}
.text--center {
  text-align: center;
}
.text--right {
  text-align: right;
}
.text--bold {
  font-weight: 700;
}
.text--semibold {
  font-weight: 600;
}
.text--regular {
  font-weight: 400;
}
.text--spaced {
  letter-spacing: 0.2em;
}
.text--nowrap {
  white-space: nowrap;
}
.text--shadow {
  text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.3);
}
.text--selected {
  position: relative;
  opacity: 0.8;
  &:before {
    content: "";
    position: absolute;
    top: 85%;
    bottom: 10%;
    left: 0;
    right: 0;
    background: rgba(255, 255, 255, 0.5);
    padding: 0 0.2em;
    box-decoration-break: clone;
    white-space: nowrap;
    z-index: -1;
  }
}
.text--caps {
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

@each $state, $color in getColors(boundless, shades) {
  .text--#{$state} {
    color: $color;
  }
}

/**
 * Blockquote
 */

blockquote {
  border-left: 2px solid #e7e7e7;
  padding-left: 1rem;
  margin: 0;
  > * + * {
    margin-top: map-get($spacing-sizes, sm);
  }
  p {
    @include font-size(map-get($type-sizes, md));
  }
  footer {
    color: #999;
    cite {
      font-style: normal;
      color: #000;
    }
  }
  &.blockquote--center {
    border-left: none;
    padding-left: 0;
    text-align: center;
  }
}

/**
 * Lists
 */

.list--unstyled,
.list--inline {
  list-style: none;
  padding-left: 0;
}

@each $size, $value in $spacing-sizes {
  .list--unstyled.padding--#{$size} {
    padding-left: $value;
  }
}

.list--inline {
  margin-left: -5px;
  > * {
    display: inline-block;
    padding-right: 5px;
    padding-left: 5px;
  }
}

/**
 * Drop cap
 */

.text--drop-cap {
  *:first-child::first-letter {
     float: left;
     @include font-size(map-get($type-sizes, xxl) * 1.3);
     @include line-height(map-get($type-sizes, xxl) * 1.1);
     margin-right: map-get($spacing-sizes, xs);
  }
}

/**
* Underlining
*/
@each $state, $color in getColors(shades, boundless) {
  .underline--#{$state} {
    border-bottom: 2px solid $color;
    padding-bottom: 8px;
  }
}
